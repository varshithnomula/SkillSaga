"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagementEnvironment = void 0;
const environmentModelIn_1 = require("../models/environmentModelIn");
const environmentModelOut_1 = require("../models/environmentModelOut");
const environmentModelUpdate_1 = require("../models/environmentModelUpdate");
const listResponseEnvironmentModelOut_1 = require("../models/listResponseEnvironmentModelOut");
const request_1 = require("../request");
class ManagementEnvironment {
    constructor(requestCtx) {
        this.requestCtx = requestCtx;
    }
    list(options) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.GET, "/api/v1/management/environment");
        request.setQueryParam("limit", options === null || options === void 0 ? void 0 : options.limit);
        request.setQueryParam("iterator", options === null || options === void 0 ? void 0 : options.iterator);
        request.setQueryParam("order", options === null || options === void 0 ? void 0 : options.order);
        return request.send(this.requestCtx, listResponseEnvironmentModelOut_1.ListResponseEnvironmentModelOutSerializer._fromJsonObject);
    }
    create(environmentModelIn, options) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.POST, "/api/v1/management/environment");
        request.setHeaderParam("idempotency-key", options === null || options === void 0 ? void 0 : options.idempotencyKey);
        request.setBody(environmentModelIn_1.EnvironmentModelInSerializer._toJsonObject(environmentModelIn));
        return request.send(this.requestCtx, environmentModelOut_1.EnvironmentModelOutSerializer._fromJsonObject);
    }
    get(envId) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.GET, "/api/v1/management/environment/{env_id}");
        request.setPathParam("env_id", envId);
        return request.send(this.requestCtx, environmentModelOut_1.EnvironmentModelOutSerializer._fromJsonObject);
    }
    update(envId, environmentModelUpdate) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.PUT, "/api/v1/management/environment/{env_id}");
        request.setPathParam("env_id", envId);
        request.setBody(environmentModelUpdate_1.EnvironmentModelUpdateSerializer._toJsonObject(environmentModelUpdate));
        return request.send(this.requestCtx, environmentModelOut_1.EnvironmentModelOutSerializer._fromJsonObject);
    }
    delete(envId) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.DELETE, "/api/v1/management/environment/{env_id}");
        request.setPathParam("env_id", envId);
        return request.sendNoResponseBody(this.requestCtx);
    }
}
exports.ManagementEnvironment = ManagementEnvironment;
//# sourceMappingURL=managementEnvironment.js.map