import { CreateStreamIn } from "../models/createStreamIn";
import { CreateStreamOut } from "../models/createStreamOut";
import { EventStreamOut } from "../models/eventStreamOut";
import { SvixRequestContext } from "../request";
export interface StreamEventsGetOptions {
    limit?: number;
    iterator?: string | null;
    after?: Date | null;
}
export interface StreamEventsCreateOptions {
    idempotencyKey?: string;
}
export declare class StreamEvents {
    private readonly requestCtx;
    constructor(requestCtx: SvixRequestContext);
    get(streamId: string, options?: StreamEventsGetOptions): Promise<EventStreamOut>;
    create(streamId: string, createStreamIn: CreateStreamIn, options?: StreamEventsCreateOptions): Promise<CreateStreamOut>;
}
