"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoint = void 0;
const endpointMtlsConfigIn_1 = require("../models/endpointMtlsConfigIn");
const endpointMtlsConfigOut_1 = require("../models/endpointMtlsConfigOut");
const endpointOauthConfigIn_1 = require("../models/endpointOauthConfigIn");
const endpointOauthConfigOut_1 = require("../models/endpointOauthConfigOut");
const endpointTransformationSimulateIn_1 = require("../models/endpointTransformationSimulateIn");
const endpointTransformationSimulateOut_1 = require("../models/endpointTransformationSimulateOut");
const hubspotOauthConfigIn_1 = require("../models/hubspotOauthConfigIn");
const request_1 = require("../request");
class Endpoint {
    constructor(requestCtx) {
        this.requestCtx = requestCtx;
    }
    getMtlsConfig(appId, endpointId) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.GET, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/mtls");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        return request.send(this.requestCtx, endpointMtlsConfigOut_1.EndpointMtlsConfigOutSerializer._fromJsonObject);
    }
    updateMtlsConfig(appId, endpointId, endpointMtlsConfigIn) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.PUT, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/mtls");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        request.setBody(endpointMtlsConfigIn_1.EndpointMtlsConfigInSerializer._toJsonObject(endpointMtlsConfigIn));
        return request.sendNoResponseBody(this.requestCtx);
    }
    deleteMtlsConfig(appId, endpointId) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.DELETE, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/mtls");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        return request.sendNoResponseBody(this.requestCtx);
    }
    getOauthConfig(appId, endpointId) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.GET, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/oauth");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        return request.send(this.requestCtx, endpointOauthConfigOut_1.EndpointOauthConfigOutSerializer._fromJsonObject);
    }
    updateOauthConfig(appId, endpointId, endpointOauthConfigIn) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.PUT, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/oauth");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        request.setBody(endpointOauthConfigIn_1.EndpointOauthConfigInSerializer._toJsonObject(endpointOauthConfigIn));
        return request.sendNoResponseBody(this.requestCtx);
    }
    deleteOauthConfig(appId, endpointId) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.DELETE, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/oauth");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        return request.sendNoResponseBody(this.requestCtx);
    }
    updateHubspotOauthConfig(appId, endpointId, hubspotOauthConfigIn) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.PUT, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation-template/oauth/hubspot");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        request.setBody(hubspotOauthConfigIn_1.HubspotOauthConfigInSerializer._toJsonObject(hubspotOauthConfigIn));
        return request.sendNoResponseBody(this.requestCtx);
    }
    transformationSimulate(appId, endpointId, endpointTransformationSimulateIn, options) {
        const request = new request_1.SvixRequest(request_1.HttpMethod.POST, "/api/v1/app/{app_id}/endpoint/{endpoint_id}/transformation/simulate");
        request.setPathParam("app_id", appId);
        request.setPathParam("endpoint_id", endpointId);
        request.setHeaderParam("idempotency-key", options === null || options === void 0 ? void 0 : options.idempotencyKey);
        request.setBody(endpointTransformationSimulateIn_1.EndpointTransformationSimulateInSerializer._toJsonObject(endpointTransformationSimulateIn));
        return request.send(this.requestCtx, endpointTransformationSimulateOut_1.EndpointTransformationSimulateOutSerializer._fromJsonObject);
    }
}
exports.Endpoint = Endpoint;
//# sourceMappingURL=endpoint.js.map