"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EndpointOauthConfigInSerializer = void 0;
const clientSecretJwtParamsIn_1 = require("./clientSecretJwtParamsIn");
const oauth2AuthMethodInOut_1 = require("./oauth2AuthMethodInOut");
const oauth2GrantTypeInOut_1 = require("./oauth2GrantTypeInOut");
exports.EndpointOauthConfigInSerializer = {
    _fromJsonObject(object) {
        return {
            authMethod: oauth2AuthMethodInOut_1.Oauth2AuthMethodInOutSerializer._fromJsonObject(object["authMethod"]),
            clientId: object["clientId"],
            clientSecret: object["clientSecret"],
            extraParams: object["extraParams"],
            grantType: oauth2GrantTypeInOut_1.Oauth2GrantTypeInOutSerializer._fromJsonObject(object["grantType"]),
            jwtParams: object["jwtParams"]
                ? clientSecretJwtParamsIn_1.ClientSecretJwtParamsInSerializer._fromJsonObject(object["jwtParams"])
                : undefined,
            refreshToken: object["refreshToken"],
            scopes: object["scopes"],
            tokenUrl: object["tokenUrl"],
        };
    },
    _toJsonObject(self) {
        return {
            authMethod: oauth2AuthMethodInOut_1.Oauth2AuthMethodInOutSerializer._toJsonObject(self.authMethod),
            clientId: self.clientId,
            clientSecret: self.clientSecret,
            extraParams: self.extraParams,
            grantType: oauth2GrantTypeInOut_1.Oauth2GrantTypeInOutSerializer._toJsonObject(self.grantType),
            jwtParams: self.jwtParams
                ? clientSecretJwtParamsIn_1.ClientSecretJwtParamsInSerializer._toJsonObject(self.jwtParams)
                : undefined,
            refreshToken: self.refreshToken,
            scopes: self.scopes,
            tokenUrl: self.tokenUrl,
        };
    },
};
//# sourceMappingURL=endpointOauthConfigIn.js.map